apiVersion: v1
data:
  harbor-data-values.yaml: 
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/tanzu-package: harbor-packages
  name: harbor-packages-values
  namespace: packages
type: Opaque
